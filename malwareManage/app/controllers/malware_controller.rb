require 'redis'
require 'digest'

class MalwareController < ApplicationController
	def new
		@analyzers = Analyzer.getType().split(' ')
	end

	def genTaskID(content)
		id = Digest::MD5.hexdigest(content)	
		#puts id
     		id <<  Digest::SHA1.hexdigest(content)
     		#puts File.size?(filename).to_s
   	 	id << content.bytesize.to_s
		return id
	end

	def uploadFile


		content = params[:upload]['datafile'].read
		if params[:upload]['datafile'].content_type.index("zip")
			print "test"
			stamp = Random.rand(9999999999)
			filename = "/tmp/mm-"+stamp.to_s
			fp = File.open(filename,'wb')
			fp.write(content)
			fp.close()
			extractDir = "/tmp/mmdir-"+stamp.to_s
			`unzip #{filename} -d #{extractDir}`
			Dir.foreach(extractDir) do |sfilename|
				if !sfilename.eql?(".") and !sfilename.eql?("..")
					sfilename = extractDir+"/"+sfilename
					content =  File.open(sfilename,'rb').read
					taskID = genTaskID(content)
					p taskID
					malware = Malware.new(taskID)
					malware = malware.save(content)
					analyzers = params['items']
					if analyzers.nil?
						#redirect_to :controller => "analyzer", :action => "index"
					else
						analyzers.each do |ana|
							Analyzer.analysis( taskID, ana, 1 )
						end
					end
				end
			end
			`rm -rf /tmp/mm-* /tmp/mmdir-*`
			p filename
			
		else
			taskID = genTaskID(content)
			malware = Malware.new(taskID)
			malware = malware.save(content)
			analyzers = params['items']
			if analyzers.nil?
				#redirect_to :controller => "analyzer", :action => "index"
			else	
				analyzers.each do |ana|
					Analyzer.analysis( taskID, ana, 1 )
				end
			end
		end
		redirect_to :controller => "analyzer", :action => "index"
	end

	def create
		#render text: params[:malware].inspect
		#@malware = Malware.new(malware_params)
		#@malware.save()
		#redirect_to @malware
		render text: params[:malware].inspect
	end

	def show
  		@malware = Malware.find(params[:id])
		@analyzers = Analyzer.getType().split(' ')
		if @malware == nil
			redirect_to action: :index 
		end
	end

	def index
		if params["cps"]==nil
			par = nil
		else
		   	par = params["cps"]["taskID"]
		end
		@malwareList = Malware.all(par)
		@checkPoints = Checkpoint.all()
		#p @checkPoints	
	end

	def download 
		print params
		@malware = Malware.find(params[:id])
		#need to santify parameter
		timeStamp = Time.now
		filePath = "/tmp/"+timeStamp.to_i.to_s
		#p filePath
		File.open(filePath, "wb") do |f|
			f.write(@malware[1]['content'])
		end 		
		send_file filePath
	end

	def analysis
		@malware = Malware.find(params[:id])
		if params.include?('items')
			analyzers = params['items']
		else
			ana_string = Analyzer.getType()
			analyzers = ana_string.split(' ')
		end

		analyzers.each do |ana|
			Analyzer.analysis( @malware[0], ana, 1 )
		end
		sleep(0.5)
		redirect_to :controller => "analyzer", :action => "index"		 
	end

	private 
	def malware_params
		params.require(:malware).permit(:title, :text)
	end
end
