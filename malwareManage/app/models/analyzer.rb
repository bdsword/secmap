require 'cassandra'
require 'redis'

class Analyzer
	extend ActiveModel::Naming
	include ActiveModel::Conversion
	
	attr_reader :id

	def persisted?
    		false
  	end

	def Analyzer.connect()
		@redis = Redis.new(:host=>"192.168.100.109")
		return @redis
	end

	def initialize(param = nil)
	end
	
	def save()
	end

	def Analyzer.model_name()
		p "model name"
		return "Analyzer"
	end

	def Analyzer.getType(param=nil)
		if(@redis.nil?)
                        @redis = Analyzer.connect()
                end
		tmp = @redis.get "ANALYZERS"
		return tmp
	end

	def Analyzer.analysis( malwareId, analysisType, priority  )
		if(@redis.nil?)
                        @redis = Analyzer.connect()
                end
		@redis.lpush analysisType+":"+priority.to_s, malwareId	
	end
	
	def Analyzer.all(param=nil)
		p "Listing all Analyzer"
		if(@redis.nil?)
			@redis = Analyzer.connect()
		end
		@list = Hash[] 
		tmp = @redis.smembers "analyzers" 
		tmp.each do |analyzer|
			p analyzer
			job = @redis.get analyzer
			if(job.nil?)
				job = "Analyzer Offline"
			end
			@list[analyzer] = job 
		end
		p @list
		return @list
	end
end
